plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'com.seoulfit'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://repo.osgeo.org/repository/release/"
    }
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // Reactive Web (WebClient 포함)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Validation
    implementation 'org.springframework.boot:spring-boot-starter-security' // Security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // Monitoring
    
    // Reactive Streams (명시적 추가)
    implementation 'io.projectreactor:reactor-core'
    implementation 'io.projectreactor.netty:reactor-netty-http'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // Jackson (JSON 처리)
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    // XML 처리를 위한 Jackson XML 추가
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    
    // Spatial data processing (alternative to GeoTools)
    implementation 'org.locationtech.jts:jts-core:1.19.0'
    implementation 'com.opencsv:opencsv:5.9'

    // google gson
    implementation 'com.google.code.gson:gson:2.13.1'
    
    // Environment variables (.env file support)
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Database
    runtimeOnly 'com.h2database:h2' // 개발용
    runtimeOnly 'com.mysql:mysql-connector-j' // 테스트용

    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    
    // Caching
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    
    // Monitoring & Metrics
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    
    // Performance Monitoring
    implementation 'net.ttddyy:datasource-proxy:1.10'
    implementation 'p6spy:p6spy:3.9.1'
    
    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test' // Reactive 테스트
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0' // MockWebServer for API testing
    testImplementation ('com.github.javafaker:javafaker:1.0.2') {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    testImplementation 'org.yaml:snakeyaml:2.2' // Override snakeyaml version
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/BackendApplication.class',
                '**/config/**',
                '**/dto/**',
                '**/domain/**/*Exception.class',
                '**/infrastructure/batch/**'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule {
            limit {
                minimum = 0.70 // 70% 최소 커버리지
            }
        }
    }
}
