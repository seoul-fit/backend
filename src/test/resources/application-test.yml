# UrbanPing 테스트 환경 설정
# Seoul Fit 팀에서 관리하는 테스트 전용 설정 파일입니다.

server:
  port: 0  # 랜덤 포트 사용

spring:
  application:
    name: seoul-fit-backend-test
  
  # 테스트용 데이터베이스 설정
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
  
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
    open-in-view: false
  
  # H2 콘솔 활성화 (테스트 시 디버깅용)
  h2:
    console:
      enabled: false
      path: /h2-console
  
  # OAuth 설정 (테스트용)
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: test-kakao-client-id
            client-secret: test-kakao-client-secret
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image, account_email
            client-name: Kakao
          google:
            client-id: test-google-client-id
            client-secret: test-google-client-secret
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope: profile, email
          naver:
            client-id: test-naver-client-id
            client-secret: test-naver-client-secret
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

# Seoul API 설정 (테스트용)
seoul-api:
  base-url: 'http://localhost:8080/mock-api'
  v1:
    culture:
      service-name:
        - culturalEventInfo
        - ListPublicReservationCulture
        - culturalSpaceInfo
    environment:
      service-name:
        - RealtimeCityAir
      api-key: test-api-key
      batch-size: 100
      retention-days: 1
    amenities:
      service-name:
        - TbGtnHwcwP
    facilities:
      service-name:
        - SeoulPublicLibraryInfo
    park:
      service-name: SearchParkInfoService
      batch-size: 100
      retention-days: 1
    sports:
      service-name: ListProgramByPublicSportsFacilitiesService
      batch-size: 100
      retention-days: 1
    restaurant:
      service-name: TbVwRestaurants
      batch-size: 100
      retention-days: 1

# UrbanPing 애플리케이션 설정 (테스트용)
urbanping:
  # API 설정
  api:
    seoul:
      base-url: http://localhost:8080/mock-api
      api-key: test-api-key
      timeout: 5
      retry-attempts: 1
  
  # 트리거 설정
  trigger:
    temperature:
      high-threshold: 30.0
      low-threshold: 5.0
    bike:
      shortage-threshold: 10
      full-threshold: 95
      location-radius: 2000
    air-quality:
      bad-levels: ["나쁨", "매우나쁨"]
      pm10-threshold: 80
      pm25-threshold: 35
    congestion:
      high-levels: ["붐빔", "매우붐빔"]
  
  # 스케줄러 설정 (테스트에서는 비활성화)
  scheduler:
    enabled: false
    realtime-interval: 60000
    cultural-interval: 300000
    env-realtime-interval: 60000
    env-daily-cron: "0 0 3 * * ?"
    env-weekly-cron: "0 0 2 * * SUN"
    culture:
      daily-cron:
        - "0 1 2 * * ?"
        - "0 2 2 * * ?"
        - "0 3 2 * * ?"
    facilities:
      daily-cron:
        - "0 30 2 * * ?"
        - "0 31 2 * * ?"

# JWT 설정 (테스트용)
jwt:
  secret: test-jwt-secret-key-for-testing-purposes-only-must-be-at-least-256-bits-long
  access-token-validity-in-seconds: 1800
  refresh-token-validity-in-seconds: 1209600

# 로깅 설정 (테스트용)
logging:
  level:
    com.seoulfit.backend: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.security: WARN
    org.springframework.boot.autoconfigure: WARN

# Actuator 설정 (테스트용)
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: never
